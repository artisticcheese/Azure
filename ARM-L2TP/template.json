{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.1",
   "parameters": {

      "enableAcceleratedNetworking": {
         "type": "bool",
         "defaultValue": true
      },
      "networkSecurityGroupName": {
         "type": "string",
         "defaultValue": "[concat('RRAS-nsg')]"
      },
      "VNETResourceGroupName": {
         "type": "string",
         "defaultValue": "[resourceGroup().name]"
      },
      "VNETName": {
         "type": "string"
      },
      "SubnetName": {
         "type": "string"
      },
      "subnetRef": {
         "type": "string",
         "defaultValue": "[resourceId(parameters('VNETResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VNETName'), parameters('subnetName'))]"
      },
      "SharedSecret": {
         "type": "securestring"
      },
      "VPNAddressRanges": {
         "type": "string",
         "defaultValue": "'172.0.16.1','172.0.16.14'"
      },

      "publicIpAddressName": {
         "type": "string",
         "defaultValue": "[concat('RRAS-ip')]"
      },
      "publicIpAddressType": {
         "type": "string",
         "defaultValue": "dynamic"
      },
      "publicIpAddressSku": {
         "type": "string",
         "defaultValue": "Basic"
      },
      "virtualMachineName": {
         "type": "string",
         "defaultValue": "RRAS"
      },
      "virtualMachineComputerName": {
         "type": "string",
         "defaultValue": "[parameters('virtualMachineName')]"
      },
      "osDiskType": {
         "type": "string",
         "defaultValue": "Premium_LRS"
      },
      "virtualMachineSize": {
         "type": "string",
         "defaultValue": "Standard_D4s_v4"
      },
      "adminUsername": {
         "type": "string",
         "defaultValue": "cloudadmin"
      },
      "adminPassword": {
         "type": "secureString"
      },
      "patchMode": {
         "type": "string",
         "defaultValue": "AutomaticByOS"
      }
   },
   "variables": {
      "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
      "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('VNETName'))]",
      "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
      "location": "[resourceGroup().location]"
   },
   "resources": [
      {
         "apiVersion": "2018-06-01",
         "type": "Microsoft.Compute/virtualMachines/extensions",
         "name": "[concat(parameters('virtualMachineName'), '/prep')]",
         "location": "[variables('location')]",
         "dependsOn": [
            "[parameters('VirtualMachineName')]"
         ],
         "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.10",
            "autoUpgradeMinorVersion": true,
            "settings": {
               "timestamp": 12
            },

            "protectedSettings": {
               "commandToExecute": "[concat('powershell.exe -command \"& ./prep.ps1 -VPNAccount ', parameters('adminUsername'), ' -VPNPassword (convertto-SecureString ', parameters('adminPassword'),
               ' -AsPlainText -Force) -SharedSecret ', parameters('SharedSecret'), ' -ipAddressRange @(', parameters('VPNAddressRanges'), ') \"')]",
               "fileUris": [
                  "https://raw.githubusercontent.com/artisticcheese/Azure/main/ARM-L2TP/DSC/prep.ps1",
                  "https://raw.githubusercontent.com/artisticcheese/Azure/main/ARM-L2TP/DSC/run.ps1"
               ]

            }
         }
      },

      {
         "name": "[variables('networkInterfaceName')]",
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2018-10-01",
         "location": "[variables('location')]",
         "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
            "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
         ],
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "subnet": {
                        "id": "[parameters('subnetRef')]"
                     },
                     "privateIPAllocationMethod": "Dynamic",
                     "publicIpAddress": {
                        "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                     }
                  }
               }
            ],
            "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
            "networkSecurityGroup": {
               "id": "[variables('nsgId')]"
            }
         }
      },
      {
         "name": "[parameters('networkSecurityGroupName')]",
         "type": "Microsoft.Network/networkSecurityGroups",
         "apiVersion": "2019-02-01",
         "location": "[variables('location')]",
         "properties": {
            "securityRules": [
               {
                  "name": "L2TP",
                  "properties": {
                     "priority": 300,
                     "protocol": "UDP",
                     "access": "Allow",
                     "direction": "Inbound",
                     "sourceAddressPrefix": "*",
                     "sourcePortRange": "*",
                     "destinationAddressPrefix": "*",
                     "destinationPortRanges": [
                        "500",
                        "4500"
                     ]
                  }
               }
            ]
         }
      },
      {
         "name": "[parameters('publicIpAddressName')]",
         "type": "Microsoft.Network/publicIpAddresses",
         "apiVersion": "2019-02-01",
         "location": "[variables('location')]",
         "properties": {
            "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
            "dnsSettings": {
               "domainNameLabel": "[take(uniqueString(resourceGroup().id),10)]"
            }
         },
         "sku": {
            "name": "[parameters('publicIpAddressSku')]"
         }
      },
      {
         "name": "[parameters('virtualMachineName')]",
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2020-06-01",
         "location": "[variables('location')]",
         "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "[parameters('virtualMachineSize')]"
            },
            "storageProfile": {
               "osDisk": {
                  "createOption": "fromImage",
                  "managedDisk": {
                     "storageAccountType": "[parameters('osDiskType')]"
                  }
               },
               "imageReference": {
                  "publisher": "MicrosoftWindowsServer",
                  "offer": "WindowsServer",
                  "sku": "2019-Datacenter-Core-smalldisk",
                  "version": "latest"
               }
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                  }
               ]
            },
            "osProfile": {
               "computerName": "[parameters('virtualMachineComputerName')]",
               "adminUsername": "[parameters('adminUsername')]",
               "adminPassword": "[parameters('adminPassword')]",
               "windowsConfiguration": {
                  "enableAutomaticUpdates": true,
                  "provisionVmAgent": true,
                  "patchSettings": {
                     "patchMode": "[parameters('patchMode')]"
                  }
               }
            },
            "diagnosticsProfile": {
               "bootDiagnostics": {
                  "enabled": true
               }
            }
         }
      }
   ],
   "outputs": {
      "fqdn": {
         "type": "string",
         "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))).dnsSettings.fqdn]"
      }
   }
}